[{"path":"https://kwb-r.github.io/kwb.fakin/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to kwb.fakin","title":"Contributing to kwb.fakin","text":"outlines propose change kwb.fakin. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to kwb.fakin","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to kwb.fakin","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to kwb.fakin","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to kwb.fakin","text":"Please note kwb.fakin project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/CONTRIBUTING.html","id":"see-tidyverse-development-contributing-guide","dir":"","previous_headings":"","what":"See tidyverse development contributing guide","title":"Contributing to kwb.fakin","text":"details.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2017-2022 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/articles/analyse_scripts.html","id":"what-packages-are-used-by-our-scripts","dir":"Articles","previous_headings":"","what":"What packages are used by our scripts?","title":"Analysing R Scripts","text":"find R-packages used R-scripts, may use function get_names_of_used_packages kwb.code package:","code":"#devtools::install_github(\"kwb-r/kwb.code\")  # Define the top level directory in which to look recursively for R-scripts root_dir = \"~/Desktop/R-Development/RScripts\"  # Get the names of the packages that are loaded in the scripts with \"library()\" packages <- kwb.code::get_names_of_used_packages(root_dir)  # Print the script names writeLines(packages)"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/analyse_scripts.html","id":"get-file-properties-recursively","dir":"Articles","previous_headings":"","what":"Get file properties recursively","title":"Analysing R Scripts","text":"base function file.info can used get detailed information file. package kwb.fakin contains function calls function files certain root folder:","code":"# Define the root directory root_dir <- system.file(package = \"kwb.fakin\")  # Get information on all files in this directory file_info <- fakin.path.app::get_recursive_file_info(root_dir)  # Get information on R scripts only... file_info_scripts <- fakin.path.app::get_recursive_file_info(root_dir, \"[.]R$\")  print(utils::sessionInfo())  # Show the structure of the result str(structure(file_info_scripts, class = \"data.frame\"))"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/track_folder_changes.html","id":"problem","dir":"Articles","previous_headings":"","what":"Problem","title":"Tracking Changes in Folder Structures","text":"modifying files folders direcly file server. practice risk changes folder structure, renaming, moving deleting folders undesired effects. example, link folder broken folder renamed. script work input file folder renamed moved. Therefore, important know changes made files folders server.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/articles/track_folder_changes.html","id":"permanent-tracking-is-not-an-option","dir":"Articles","previous_headings":"","what":"Permanent Tracking Is Not an Option","title":"Tracking Changes in Folder Structures","text":"possible let operating system track changes. However, slow server much option.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/articles/track_folder_changes.html","id":"proposal-of-a-simple-solution","dir":"Articles","previous_headings":"","what":"Proposal of a Simple Solution","title":"Tracking Changes in Folder Structures","text":"propose following “hand-made” simple solution track changes: per day (preferably night) run script. script gets full list files folders currently stored server. list contain paths files folders also additional information file sizes, times last access owners files. information written text file. text files allow quickly search file folder just searching text file. Even though files size 50 Megabytes, searching files using good text editor much efficient searching whole file server. compare text files referring different days. Using tools provided professional version control software can support comparison.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/articles/track_folder_changes.html","id":"supporting-functions","dir":"Articles","previous_headings":"","what":"Supporting Functions","title":"Tracking Changes in Folder Structures","text":"package contains set functions aim supporting approach described .","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/articles/track_folder_changes.html","id":"read-and-save-file-path-information","dir":"Articles","previous_headings":"Supporting Functions","what":"Read and Save File Path Information","title":"Tracking Changes in Folder Structures","text":"read_paths(): Read paths text file contains exactly one path per line.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/articles/track_folder_changes.html","id":"recreate-folder-structure-from-paths","dir":"Articles","previous_headings":"Supporting Functions","what":"Recreate Folder Structure From Paths","title":"Tracking Changes in Folder Structures","text":"write_paths_to_folder_tree(): Create folder structure certain folder depth given target directory. folder structure defined vector paths. idea function restore old folder structure paths saved. two folder structures restored two path vectors represent original folder structrue two different points time, version control software can used compare folder structures. Tortoise SVN, example, changes marked red exclamation mark. build_folders_from_file(): Restore folder structure paths stored text file. function first reads vector paths text file calls write_paths_to_folder_tree() restore defined folder structure.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/articles/understanding_encoding.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Understanding Encoding","text":"document best practices research data managment recommend stick basic set characters naming files folders. may ask, ? may never problems working files containing spaces special characters. case , lucky. probably exchange files computers different operating systems (.e. Windows vs. Linux) /different regional settings (e.g. German vs.  English vs. French vs. Bulgarian), automate tasks programming.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/articles/understanding_encoding.html","id":"example-sessions","dir":"Articles","previous_headings":"","what":"Example Sessions","title":"Understanding Encoding","text":"R tell us Encoding? learn, R offers function Encoding() well functions enc2native() enc2utf8(). functions work? Let’s look Examples given R documentation:","code":"?Encoding ## x is intended to be in latin1 x <- \"fa\\xE7ile\" Encoding(x) #> [1] \"unknown\" Encoding(x) <- \"latin1\" x #> [1] \"façile\" xx <- iconv(x, \"latin1\", \"UTF-8\") Encoding(c(x, xx)) #> [1] \"latin1\" \"UTF-8\" c(x, xx) #> [1] \"façile\" \"façile\"  ### The following now gives an error Encoding(xx) <- \"bytes\" xx # will be encoded in hex #> [1] \"fa\\\\xc3\\\\xa7ile\" cat(\"xx = \", xx, \"\\n\", sep = \"\") #> xx = fa\\xc3\\xa7ile"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/understanding_encoding.html","id":"writing-to-and-reading-from-files","dir":"Articles","previous_headings":"","what":"Writing to and Reading from Files","title":"Understanding Encoding","text":"Lets write line containing German special characters text file. use function writeText() kwb.utils package. function using writeLines(), additionally gives message returns path file: now read line back readLines(): Ok, problem far, used system write read file. Let’s look file byte--byte: Wow, interesting. know ! Standard characters stored one byte special characters stored two bytes! Now read file , time vector raw:","code":"text <- \"Schöne Grüße\"  test_file <- kwb.utils::writeText(text, tempfile(fileext = \".txt\")) #> Writing '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//Rtmp0Fakga/file4011477a2af9.txt' ... ok. readLines(test_file) #> [1] \"Schöne Grüße\" con <- file(test_file, \"r\")  sapply(seq_len(nchar(text, \"bytes\")), function(i) {   readChar(con, 1, useBytes = TRUE) }) #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect  #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect  #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect  #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect  #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect  #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect  #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect  #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect  #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect  #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect  #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect  #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect  #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect  #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect  #> Warning in readChar(con, 1, useBytes = TRUE): text connection used with #> readChar(), results may be incorrect #>  [1] \"S\"    \"c\"    \"h\"    \"\\xc3\" \"\\xb6\" \"n\"    \"e\"    \" \"    \"G\"    \"r\"    #> [11] \"\\xc3\" \"\\xbc\" \"\\xc3\" \"\\x9f\" \"e\"  close(con) (raw_bytes <- readBin(test_file, \"raw\", 100)) #>  [1] 53 63 68 c3 b6 6e 65 20 47 72 c3 bc c3 9f 65 0a"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/understanding_encoding.html","id":"conversion-between-numeric-codes-and-characters","dir":"Articles","previous_headings":"","what":"Conversion Between Numeric Codes and Characters","title":"Understanding Encoding","text":"characters numeric codes given hexedecimal numbers raw_bytes represent? Let’s first see hexanumeric codes decimal system: now let’s convert codes characters: function rawToChar() seems know interpret sequence byte codes. Note last character (10 decimal 0a hexadecimal system) represents newline character \\n. happens ask rawToChar() convert first second byte representing ö character separately? now together: argument multiple rawToChar(). FALSE default. happens set TRUE? documentation says, setting multiple TRUE returns single characters instead single string. look convert whole string? splitting original string single characters? , German special characters shown one character instead two. can achieve setting argument useBytes TRUE:","code":"as.integer(raw_bytes) #>  [1]  83  99 104 195 182 110 101  32  71 114 195 188 195 159 101  10 rawToChar(raw_bytes) #> [1] \"Schöne Grüße\\n\" rawToChar(raw_bytes[4]) #> [1] \"\\xc3\" rawToChar(raw_bytes[5]) #> [1] \"\\xb6\" rawToChar(raw_bytes[4:5]) #> [1] \"ö\" rawToChar(raw_bytes[4:5], multiple = TRUE) #> [1] \"\\xc3\" \"\\xb6\" (characters_1 <- rawToChar(raw_bytes, multiple = TRUE)) #>  [1] \"S\"    \"c\"    \"h\"    \"\\xc3\" \"\\xb6\" \"n\"    \"e\"    \" \"    \"G\"    \"r\"    #> [11] \"\\xc3\" \"\\xbc\" \"\\xc3\" \"\\x9f\" \"e\"    \"\\n\" strsplit(text, split = \"\")[[1]] #>  [1] \"S\" \"c\" \"h\" \"ö\" \"n\" \"e\" \" \" \"G\" \"r\" \"ü\" \"ß\" \"e\" (characters_2 <- strsplit(text, split = \"\", useBytes = TRUE)[[1]]) #>  [1] \"S\"    \"c\"    \"h\"    \"\\xc3\" \"\\xb6\" \"n\"    \"e\"    \" \"    \"G\"    \"r\"    #> [11] \"\\xc3\" \"\\xbc\" \"\\xc3\" \"\\x9f\" \"e\"  identical(characters_1[-length(characters_1)], characters_2) #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/understanding_encoding.html","id":"replace-special-characters-with-ascii-characters","dir":"Articles","previous_headings":"","what":"Replace Special Characters with ASCII Characters","title":"Understanding Encoding","text":"Ok, seems can replace special characters know byte codes (: c3 b6 letter ö). helpful function shows special characters corresponding byte codes","code":"raw_bytes #>  [1] 53 63 68 c3 b6 6e 65 20 47 72 c3 bc c3 9f 65 0a  rawToChar(raw_bytes) #> [1] \"Schöne Grüße\\n\"  gsub(\"\\xc3\\xb6\", \"oe\", rawToChar(raw_bytes)) #> [1] \"Schoene Grüße\\n\" gsub(\"\\xc3\\xb6\", \"oe\", rawToChar(raw_bytes), useBytes = TRUE) #> [1] \"Schoene Grüße\\n\" ### This function needs to be checked! kwb.fakin::get_special_character_info(text) #>   special bytes          context #> 1    \\xc3    c3 Sch [ ö ] ne Grü #> 2    \\xb6    b6  öne Gr [ ü ] ße #> 3    \\xc3    c3   ne Grü [ ß ] e #> 4    \\xbc    bc Sch [ ö ] ne Grü #> 5    \\xc3    c3  öne Gr [ ü ] ße #> 6    \\x9f    9f   ne Grü [ ß ] e"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/what_is_there.html","id":"example-files","dir":"Articles","previous_headings":"","what":"Example files","title":"What is in the package?","text":"package provides example files containing artificial path data. files located extdata folder package. function extdata_file() returns full path file folder given filename:","code":"(example_file <- fakin.path.app:::extdata_file(\"example_file_info_1.csv\")) #> [1] \"/Users/runner/work/_temp/Library/fakin.path.app/extdata/example_file_info_1.csv\""},{"path":"https://kwb-r.github.io/kwb.fakin/articles/what_is_there.html","id":"read-functions","dir":"Articles","previous_headings":"","what":"Read Functions","title":"What is in the package?","text":"package contains functions named read_*. functions described following.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/articles/what_is_there.html","id":"read_csv","dir":"Articles","previous_headings":"Read Functions","what":"read_csv()","title":"What is in the package?","text":"function reads csv file either read.table() (version = 1) data.table::fread() (version = 2). reports time takes.","code":"data_1 <- kwb.fakin::read_csv(example_file, version = 1)  #> Reading '/Users/runner/work/_temp/Library/fakin.path.app/extdata/example_file_info_1.csv' with utils::read.table() ... ok. (0.01s)  data_2 <- kwb.fakin::read_csv(example_file, version = 2) #> Reading '/Users/runner/work/_temp/Library/fakin.path.app/extdata/example_file_info_1.csv' with data.table::fread() ... ok. (0.00s)  head(data_1, 3) #>               path      size          last_access      type #> 1            radio         0 2016-12-31T12:46:27Z directory #> 2 radio/effect.png 729340270 2009-08-08T05:41:27Z      file #> 3 radio/person.pdf 812027222 2011-01-17T18:35:28Z      file  head(data_2, 3) #>               path      size         last_access      type #> 1            radio         0 2016-12-31 12:46:27 directory #> 2 radio/effect.png 729340270 2009-08-08 05:41:27      file #> 3 radio/person.pdf 812027222 2011-01-17 18:35:28      file  identical(data_1, data_2) #> [1] FALSE"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/what_is_there.html","id":"read_file_info","dir":"Articles","previous_headings":"Read Functions","what":"read_file_info()","title":"What is in the package?","text":"function reads text file contains kind file path information. function aimed read files containing file paths , one path per line, well files contain additional information file size, creation time last modification time. File sizes assumed given bytes converted Mebibytes (MiB = 2^20 bytes) order avoid large numbers require non-standard data type. reading files contain file paths (without additional columns) function adds columns type size. type guessed filename extension whereas size set 0 directories 2^20 files. can specify fileEncoding assumed file. set NULL function uses utils::localeToCharset() guess encoding. encoding passed function file() used open explicit connection. connection given readLines(). lines read assumed full file paths. Backslashes converted slashes. default, paths sorted.","code":"file_info <- fakin.path.app::read_file_paths(example_file) #> Encodings guessed by readr: #> [1] \"ASCII\" #> Selected encoding: ascii #> Reading file with read_file_info() ... Reading '/Users/runner/work/_temp/Library/fakin.path.app/extdata/example_file_info_1.csv' with data.table::fread() ... ok. (0.00s)  #> Converting file size to MiB ... ok. (0.00s)  #> ok. (0.00s)  head(file_info) #>                   path     size         last_access      type #> 1                radio   0.0000 2016-12-31 12:46:27 directory #> 2     radio/effect.png 695.5531 2009-08-08 05:41:27      file #> 3     radio/person.pdf 774.4095 2011-01-17 18:35:28      file #> 4       radio/please.R 111.6977 2016-05-21 02:07:34      file #> 5        radio/provide   0.0000 2012-10-24 05:32:42 directory #> 6 radio/provide/double   0.0000 2018-04-05 02:02:54 directory # Helper function read_example <- function(x) {   fakin.path.app::read_file_paths(kwb.fakin::extdata_file(x)) }   file_paths <- read_example(\"example_file_paths.csv\") #> Encodings guessed by readr: #> [1] \"ASCII\" #> Selected encoding: ascii #> Reading file with read_paths_only() ... Selected encoding: 'UTF-8' #> Reading paths from '/Users/runner/work/_temp/Library/kwb.fakin/extdata/example_file_paths.csv' ... ok. (0.00s)  #> 546 lines have been read. #> Sorting paths ... ok. (0.00s)  #> Guessing file path type ... ok. (0.00s)  #> ok. (0.01s) folder_paths <- read_example(\"example_folder_paths.csv\") #> Encodings guessed by readr: #> [1] \"ASCII\" #> Selected encoding: ascii #> Reading file with read_paths_only() ... Selected encoding: 'UTF-8' #> Reading paths from '/Users/runner/work/_temp/Library/kwb.fakin/extdata/example_folder_paths.csv' ... ok. (0.00s)  #> 113 lines have been read. #> Sorting paths ... ok. (0.00s)  #> Guessing file path type ... ok. (0.00s)  #> ok. (0.00s)  head(file_paths) #>                                           path type    size #> 1                             radio/effect.png file 1048576 #> 2                             radio/person.pdf file 1048576 #> 3                               radio/please.R file 1048576 #> 4             radio/provide/double/between.xls file 1048576 #> 5     radio/provide/double/corner/describe.png file 1048576 #> 6 radio/provide/double/corner/select/final.pdf file 1048576 head(folder_paths) #>                                 path      type size #> 1                              radio directory    0 #> 2                      radio/provide directory    0 #> 3               radio/provide/double directory    0 #> 4        radio/provide/double/corner directory    0 #> 5 radio/provide/double/corner/select directory    0 #> 6        radio/provide/double/design directory    0"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/what_is_there.html","id":"read_path_information","dir":"Articles","previous_headings":"Read Functions","what":"read_path_information()","title":"What is in the package?","text":"function reads file information files specified name pattern matching files read. calls read_file_info() loop files returns list list elements named according file names. content file matching path-info_<yyyy-mm-dd_HHMM>_<name>.csv appears list element <name>.","code":"file_infos <- kwb.fakin::read_path_information(   file_info_dir = kwb.fakin::extdata_file(\"\"),    pattern = \"^example_file_info.*\\\\.csv$\",    sep = \";\" ) #> No files matching '^example_file_info.*\\.csv$' in #>   '/Users/runner/work/_temp/Library/kwb.fakin/extdata/' #> Available files: #>   'example_file_paths.csv' #>   'example_folder_paths.csv' #>   'example_sizeable_sankey.R' #>   'folder_rules' #>   'main.c' #>   'makefile' #>   'powershell_template_search_query.txt' #>   'property_names.txt' #>   'testcalls_1.R' #>   'testcalls_2.R' #>   'testcalls_3.R'"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/what_is_there.html","id":"file-listing-functions","dir":"Articles","previous_headings":"","what":"File Listing Functions","title":"What is in the package?","text":"functions treated far common read file information files. following functions can used create files. use dir advanced functions fs package.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/articles/what_is_there.html","id":"list_files","dir":"Articles","previous_headings":"File Listing Functions","what":"list_files","title":"What is in the package?","text":"","code":"kwb.fakin::list_files #> function (root, file, use_batch = TRUE)  #> { #>     kwb.utils::safePath(dirname(file)) #>     cat_time(\"Start\") #>     if (use_batch) { #>         batchfile <- write_batch_list_files(root, file) #>         system2(batchfile) #>     } #>     else { #>         locale_all <- strsplit(Sys.getlocale(\"LC_ALL\"), \";\")[[1]] #>         Sys.setlocale(\"LC_ALL\", \"C\") #>         on.exit(for (locale_one in locale_all) { #>             parts <- strsplit(locale_one, \"=\")[[1]] #>             Sys.setlocale(parts[1], parts[2]) #>         }) #>         paths <- kwb.utils::catAndRun(paste(\"Scanning all files in\",  #>             root), dir(root, all.files = TRUE, full.names = TRUE,  #>             recursive = TRUE, no.. = TRUE)) #>         kwb.utils::writeText(paths, file, \"paths to\") #>     } #>     cat_time(\"End\") #> } #> <bytecode: 0x7f9f0fbaed60> #> <environment: namespace:kwb.fakin>"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/what_is_there.html","id":"get_recursive_file_info","dir":"Articles","previous_headings":"File Listing Functions","what":"get_recursive_file_info","title":"What is in the package?","text":"just wrapper around fs::dir_info() recurse = TRUE. function run inside call kwb.utils::catAndRun().","code":"root <- system.file(package = \"kwb.fakin\") file_info <- fakin.path.app::get_recursive_file_info(root) #> Getting file information on files below /Users/runner/work/_temp/Library/kwb.fakin ... ok. (0.02s) head(file_info[, 1:3]) #> # A tibble: 6 × 3 #>   path                                                         type         size #>   <fs::path>                                                   <fct>     <fs::b> #> 1 /Users/runner/work/_temp/Library/kwb.fakin/DESCRIPTION       file        2.01K #> 2 /Users/runner/work/_temp/Library/kwb.fakin/INDEX             file        2.24K #> 3 /Users/runner/work/_temp/Library/kwb.fakin/LICENSE           file        1.08K #> 4 /Users/runner/work/_temp/Library/kwb.fakin/Meta              directory     256 #> 5 /Users/runner/work/_temp/Library/kwb.fakin/Meta/Rd.rds       file        1.56K #> 6 /Users/runner/work/_temp/Library/kwb.fakin/Meta/features.rds file          121"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/working_with_paths.html","id":"providing-file-path-information","dir":"Articles","previous_headings":"","what":"Providing File Path Information","title":"Working with Paths","text":"Assume vector file paths. may read file created redirecting output dir command Windows Command Window file (dir /s /b > paths.txt).","code":"paths <- c(   \"project-1/wp-1/input/file 1.csv\",   \"project-1/wp-1/input/file-2.csv\",   \"project-1/wp-1/analysis/summary.pdf\",   \"project-1/wp 2/input/köpenick_dirty.csv\",   \"project-1/wp 2/output/koepenick_clean.csv\",   \"project-2/Daten/file-1.csv\",   \"project-2/Grafiken/file 1.png\",   \"project-2/Berichte/bericht-1.doc\",   \"project-2/Berichte/bericht-2.doc\" )"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/working_with_paths.html","id":"plotting-paths","dir":"Articles","previous_headings":"","what":"Plotting Paths","title":"Working with Paths","text":"Let’s get first impression paths defined plotting . provide plot function uses sankeyNetwork() function networkD3 package. Make sure package installed: can use plot_path_network() function kwb.fakin package plot example paths defined : function accepts arguments provided networkD3::sankeyNetwork(). may e.g. use argument fontSize increase node labels: Let’s always use font size defining short helper function: default first three levels folders files shown. can increase (decrease) number shown levels setting max_depth argument: Now, three traffic light colours (green, yellow, red) appear plot, want explain colours intended indicate: Green: name fully compliant naming rules. consists alphanumeric letters, underscore, hyphen dot. Yellow: name almost compliant naming rules. constists alphanumeric letters, underscore, hyphen, dot space. Red: name comply naming rules. contains least one character alphanumeric underscore, hyphen, dot space. cases due German special characters, ‘ä’, ‘ö’, ‘ü’. naming rules documented FAKIN Best Practices Document","code":"if (! require(\"networkD3\")) {      install.packages(\"networkD3\", repos = \"https://cloud.r-project.org\") } ## Loading required package: networkD3 fakin.path.app::plot_path_network(paths) fakin.path.app::plot_path_network(paths, fontSize = 16) plot_16pt <- function(...) fakin.path.app::plot_path_network(..., fontSize = 16) plot_16pt(paths, max_depth = 4)"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/working_with_paths.html","id":"treemaps","dir":"Articles","previous_headings":"","what":"Treemaps","title":"Working with Paths","text":"proportion folder sizes can visualised called tree-maps. provide function uses treemaps package generate plots. input function data frame columns path, type size, representing file folder paths, type path (\"file\" \"directory\") file size, respectively. data frame can e.g. retrieved means function get_recursive_file_info(). , provide fake data: file information, generate treeplot plot_treemaps_from_path_data(). Two plots generated: first plot, rectangle sizes represent total size files contained corresponding folder subfolders. colour indicates total number files contained folders. second plot, rectangle sizes represent total number files contained corresponding folder subfolders. colour indicates total size files contained folders.   default plots saved png files temporary directory. let plots show set as_png FALSE call.","code":"file_info <- kwb.utils::noFactorDataFrame(   path = paths,   type = \"file\",   size = sample(1:1000, length(paths), replace = TRUE) ) ## Preparing data for 'root' ...  ## Splitting paths ... ok. (0.00s)  ## ok. (0.00s)  ## Aggregating by first 2 path levels ... ## Warning: `summarise_()` was deprecated in dplyr 0.7.0. ## Please use `summarise()` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. ## Warning: `group_by_()` was deprecated in dplyr 0.7.0. ## Please use `group_by()` instead. ## See vignette('programming') for more help ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated. ## ok. (0.09s)  ## Creating treemap 'size' ... ## ok. (0.29s)  ## Creating treemap 'files' ... ## ok. (0.16s) ## NULL"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/working_with_paths.html","id":"selecting-paths","dir":"Articles","previous_headings":"","what":"Selecting Paths","title":"Working with Paths","text":"want investigate complex folder structure hundreds thousands files overview plot show properly. useful select subsection folder structure investigation.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/articles/working_with_paths.html","id":"selecting-paths-from-a-list-or-matrix-of-subfolders","dir":"Articles","previous_headings":"Selecting Paths","what":"Selecting Paths from a List or Matrix of Subfolders","title":"Working with Paths","text":"split vector paths subfolder names may use function kwb.pathdict::starts_with_parts() filter paths starting certain sequence subfolders: function can also used matrix subfolders:","code":"path_parts <- kwb.file::split_paths(paths) ## Splitting paths ... ok. (0.00s) start_parts <- c(\"project-1\", \"wp-1\")  path_parts[kwb.pathdict::starts_with_parts(path_parts, start_parts)] ## [[1]] ## [1] \"project-1\"  \"wp-1\"       \"input\"      \"file 1.csv\" ##  ## [[2]] ## [1] \"project-1\"  \"wp-1\"       \"input\"      \"file-2.csv\" ##  ## [[3]] ## [1] \"project-1\"   \"wp-1\"        \"analysis\"    \"summary.pdf\" folders <- kwb.file::to_subdir_matrix(paths)  folders[kwb.pathdict::starts_with_parts(folders, start_parts), ] ##      [,1]        [,2]   [,3]       [,4]          ## [1,] \"project-1\" \"wp-1\" \"input\"    \"file 1.csv\"  ## [2,] \"project-1\" \"wp-1\" \"input\"    \"file-2.csv\"  ## [3,] \"project-1\" \"wp-1\" \"analysis\" \"summary.pdf\" folders[kwb.pathdict::starts_with_parts(folders, c(start_parts, \"input\")), ] ##      [,1]        [,2]   [,3]    [,4]         ## [1,] \"project-1\" \"wp-1\" \"input\" \"file 1.csv\" ## [2,] \"project-1\" \"wp-1\" \"input\" \"file-2.csv\""},{"path":"https://kwb-r.github.io/kwb.fakin/articles/working_with_paths.html","id":"selecting-paths-from-a-path-tree","dir":"Articles","previous_headings":"Selecting Paths","what":"Selecting Paths from a Path Tree","title":"Working with Paths","text":"simplify selection paths wrote function converts vector path strings nested list. list, folder names appear names list elements. Let’s try example paths defined : path tree list lists top level elements representing top level folders paths, second level elements representing sub-folders top level folders, . tree structure, easy select sub-tree just using dollar operator $ lists. , example, want select paths belonging project 1, can write: Note element name project-1 needs quoted special quotes , R, hyphen else interpreted minus operator. convert tree structure back path strings, use flatten_tree: can plot sub-tree passing directly plot_path_network, helper function, without prior conversion:","code":"# Convert the vector of paths into a tree structure path_tree <- kwb.fakin:::to_tree(paths) ## Checking for duplicates in 'as.character(x)' ... ok. (0.00s) # Show the structure of the tree str(path_tree) ## List of 2 ##  $ project-1:List of 2 ##   ..$ wp 2:List of 2 ##   .. ..$ input :List of 1 ##   .. .. ..$ köpenick_dirty.csv: chr \"\" ##   .. .. ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##   .. ..$ output:List of 1 ##   .. .. ..$ koepenick_clean.csv: chr \"\" ##   .. .. ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##   .. ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##   ..$ wp-1:List of 2 ##   .. ..$ analysis:List of 1 ##   .. .. ..$ summary.pdf: chr \"\" ##   .. .. ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##   .. ..$ input   :List of 2 ##   .. .. ..$ file 1.csv: chr \"\" ##   .. .. ..$ file-2.csv: chr \"\" ##   .. .. ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##   .. ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##   ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##  $ project-2:List of 3 ##   ..$ Berichte:List of 2 ##   .. ..$ bericht-1.doc: chr \"\" ##   .. ..$ bericht-2.doc: chr \"\" ##   .. ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##   ..$ Daten   :List of 1 ##   .. ..$ file-1.csv: chr \"\" ##   .. ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##   ..$ Grafiken:List of 1 ##   .. ..$ file 1.png: chr \"\" ##   .. ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##   ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##  - attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" # Select the sub-tree below \"project-1\" subtree <- path_tree$`project-1`  # Show the sub-tree str(subtree) ## List of 2 ##  $ wp 2:List of 2 ##   ..$ input :List of 1 ##   .. ..$ köpenick_dirty.csv: chr \"\" ##   .. ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##   ..$ output:List of 1 ##   .. ..$ koepenick_clean.csv: chr \"\" ##   .. ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##   ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##  $ wp-1:List of 2 ##   ..$ analysis:List of 1 ##   .. ..$ summary.pdf: chr \"\" ##   .. ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##   ..$ input   :List of 2 ##   .. ..$ file 1.csv: chr \"\" ##   .. ..$ file-2.csv: chr \"\" ##   .. ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##   ..- attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" ##  - attr(*, \"class\")= chr [1:2] \"path_tree\" \"list\" kwb.fakin:::flatten_tree(subtree) ## [1] \"wp 2/input/köpenick_dirty.csv\"   \"wp 2/output/koepenick_clean.csv\" ## [3] \"wp-1/analysis/summary.pdf\"       \"wp-1/input/file 1.csv\"           ## [5] \"wp-1/input/file-2.csv\" plot_16pt(kwb.fakin:::flatten_tree(subtree))"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/working_with_paths.html","id":"quality-of-file-and-folder-names","dir":"Articles","previous_headings":"","what":"Quality of File and Folder Names","title":"Working with Paths","text":"automatic processing files may fail due special characters (e.g.  German Umlaute) contained folder file names. package contains function ascii_stats calculates percentages strings containing containing special (non-ASCII) characters. aim reduce percentage non-ASCI characters.","code":"kwb.fakin:::ascii_stats(paths) ## nonAscii ##    FALSE     TRUE  ## 88.88889 11.11111"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/working_with_paths.html","id":"quality-of-folder-structures","dir":"Articles","previous_headings":"","what":"Quality of Folder Structures","title":"Working with Paths","text":"modify folder structures order make intuitive need tool measure improvement. Therefore created account following website: https://www.optimalworkshop.com/treejack , can define tree structures interactive web-pages created users asked navigate certain file tree. Behind scenes web page tracks clicks user way tree. treejack service provides import functionality can define structure tree giving set text lines line representing branch leaf tree. function subtree_for_treejack creates text required :","code":"kwb.fakin:::subtree_for_treejack(root = \"project-1\", paths) ## Filter for paths starting with project-1/ ... ##   ok. Remaining paths: 5  ## Convert to relative paths ... ok. ## Splitting paths ... ok. (0.00s)  ## Splitting paths ... ok. (0.00s)  ## Splitting paths ... ok. (0.00s)  ## Splitting paths ... ok. (0.00s)  ##  ## ================================================================ ##  ## Copy and paste the output below to the 'Bulk import' input field ## at https://www.optimalworkshop.com ##  ## ================================================================ ##  ## wp 2  ##  input ##  output ## wp-1  ##  analysis ##  input"},{"path":"https://kwb-r.github.io/kwb.fakin/articles/working_with_paths.html","id":"analysis-of-paths","dir":"Articles","previous_headings":"","what":"Analysis of Paths","title":"Working with Paths","text":"can split paths parts using split_paths function kwb.file package: may useful convert list returned split_paths matrix: Content subdirs matrix matrix, row represents path column represents depth level. one path, may create paths direct parent directories using function all_path_levels. subtree_for_treejack creates text bulk import Treejack (see ). Content parents matrix","code":"parts <- kwb.file::split_paths(paths) ## Splitting paths ... ok. (0.00s) parts[1:3] ## [[1]] ## [1] \"project-1\"  \"wp-1\"       \"input\"      \"file 1.csv\" ##  ## [[2]] ## [1] \"project-1\"  \"wp-1\"       \"input\"      \"file-2.csv\" ##  ## [[3]] ## [1] \"project-1\"   \"wp-1\"        \"analysis\"    \"summary.pdf\" subdirs <- kwb.file::to_subdir_matrix(parts) (parent_paths <- kwb.fakin:::all_path_levels(paths[1])) ## Splitting paths ... ok. (0.00s) ## [1] \"project-1\"                       \"project-1/wp-1\"                  ## [3] \"project-1/wp-1/input\"            \"project-1/wp-1/input/file 1.csv\" parents <- kwb.file::to_subdir_matrix(parent_paths)"},{"path":"https://kwb-r.github.io/kwb.fakin/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hauke Sonnenberg. Author, maintainer. Michael Rustler. Contributor. . Funder. . Copyright holder.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sonnenberg H (2022). kwb.fakin: Functions Used Fakin Project. R package version 0.4.2, https://github.com/kwb-r/kwb.fakin.","code":"@Manual{,   title = {kwb.fakin: Functions Used in Our Fakin Project},   author = {Hauke Sonnenberg},   year = {2022},   note = {R package version 0.4.2},   url = {https://github.com/kwb-r/kwb.fakin}, }"},{"path":"https://kwb-r.github.io/kwb.fakin/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions Used in Our Fakin Project","text":"installing latest release R package run following code :","code":"# Enable repository from kwb-r options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))  # Download and install kwb.fakin in R install.packages('kwb.fakin')  # Browse the kwb.fakin manual pages help(package = 'kwb.fakin')"},{"path":"https://kwb-r.github.io/kwb.fakin/index.html","id":"contributing-to-kwbfakin","dir":"","previous_headings":"","what":"Contributing to kwb.fakin","title":"Functions Used in Our Fakin Project","text":"contributing development kwb.fakin please check contribution guideline.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/all_path_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"All Paths to Parent Folders — all_path_levels","title":"All Paths to Parent Folders — all_path_levels","text":"given path /b/c/d, parent paths , /b, /b/c path (/b/c/d) returned.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/all_path_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All Paths to Parent Folders — all_path_levels","text":"","code":"all_path_levels(path)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/all_path_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"All Paths to Parent Folders — all_path_levels","text":"path one character string representing file path","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/all_path_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"All Paths to Parent Folders — all_path_levels","text":"vector character representing parent paths path  last element","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/all_path_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All Paths to Parent Folders — all_path_levels","text":"","code":"paths <- kwb.fakin:::all_path_levels(\"this/is/a/long/path\") #> Splitting paths ... ok. (0.00s)  kwb.file:::to_subdir_matrix(paths) #>      [,1]   [,2] [,3] [,4]   [,5]   #> [1,] \"this\" \"\"   \"\"   \"\"     \"\"     #> [2,] \"this\" \"is\" \"\"   \"\"     \"\"     #> [3,] \"this\" \"is\" \"a\"  \"\"     \"\"     #> [4,] \"this\" \"is\" \"a\"  \"long\" \"\"     #> [5,] \"this\" \"is\" \"a\"  \"long\" \"path\""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/build_folders_from_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Folder Structure from Paths in File — build_folders_from_file","title":"Create Folder Structure from Paths in File — build_folders_from_file","text":"Create Folder Structure Paths File","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/build_folders_from_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Folder Structure from Paths in File — build_folders_from_file","text":"","code":"build_folders_from_file(   file,   target_dir,   pattern = NULL,   max_depth = NULL,   encoding = \"Latin-1\" )"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/build_folders_from_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Folder Structure from Paths in File — build_folders_from_file","text":"file path file containing path strings target_dir path target directory create folder structure pattern regular expression matching paths file considered max_depth maximum folder depth considered encoding encoding used reading file","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/build_folders_from_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Folder Structure from Paths in File — build_folders_from_file","text":"","code":"# Create a vector of example paths paths <- c(\"a1/b1\", \"a1/b2\", \"a2/b1\", \"a2/b1/c1\")  # Write the example paths to a temporary file writeLines(paths, file <- tempfile())  # Create a temporary target directory target_dir <- kwb.utils::createDirectory(file.path(tempdir(), \"test\")) #> The directory \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpAqBTLj/test\" was created.  # Create the folder structure as defined by the paths in the temporary file kwb.fakin::build_folders_from_file(file, target_dir) #> Encodings guessed by readr: #> [1] \"ASCII\" #> Selected encoding: windows-1252 #> Reading paths from '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpAqBTLj/file388256fbadb0' ... ok. (0.00s)  #> 4 lines have been read. #> Splitting paths ... ok. (0.00s)  #> The directory \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpAqBTLj/test\" already exists. #> The directory \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpAqBTLj/test/a1\" was created. #> The directory \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpAqBTLj/test/a1/b1\" was created. #> The directory \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpAqBTLj/test/a1/b2\" was created. #> The directory \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpAqBTLj/test/a2\" was created. #> The directory \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpAqBTLj/test/a2/b1\" was created. #> The directory \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpAqBTLj/test/a2/b1/c1\" was created.  # List the directory paths below the target directory paths_reread <- list.dirs(target_dir, recursive = TRUE, full.names = FALSE)  # Stop if not all paths have been created stopifnot(all(paths %in% paths_reread))"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/createLocalProject.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Empty Project Folder Structure Locally — createLocalProject","title":"Create Empty Project Folder Structure Locally — createLocalProject","text":"Copy pure folder structure (without files) given KWB project server new local folder \"C:/Users/<user_name>/Documents/Projekte\"","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/createLocalProject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Empty Project Folder Structure Locally — createLocalProject","text":"","code":"createLocalProject(   project,   start_directory = options()$kwb.fakin.paths$projects )"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/createLocalProject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Empty Project Folder Structure Locally — createLocalProject","text":"project Project name. Must correspond name folder one server locations returned getProjectPaths start_directory Path project network drive KWB","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/cut.path_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut a Path Tree — cut.path_tree","title":"Cut a Path Tree — cut.path_tree","text":"Reduce path tree first levels.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/cut.path_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut a Path Tree — cut.path_tree","text":"","code":"# S3 method for path_tree cut(x, n_levels = 2, depth = 0, ...)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/cut.path_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut a Path Tree — cut.path_tree","text":"x tree object returned kwb.fakin:::to_tree n_levels number levels tree cut depth current depth level ... arguments (currently used)","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/extdata_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to File in extdata Folder of this Package — extdata_file","title":"Path to File in extdata Folder of this Package — extdata_file","text":"Path File extdata Folder Package","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/extdata_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to File in extdata Folder of this Package — extdata_file","text":"","code":"extdata_file(file)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/extdata_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path to File in extdata Folder of this Package — extdata_file","text":"file filename path file, relative extdata/","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/extract_and_substitute.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Substring Matching Pattern and Replace — extract_and_substitute","title":"Extract Substring Matching Pattern and Replace — extract_and_substitute","text":"Extract Substring Matching Pattern Replace","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/extract_and_substitute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Substring Matching Pattern and Replace — extract_and_substitute","text":"","code":"extract_and_substitute(pattern, replacement, x)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/extract_and_substitute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Substring Matching Pattern and Replace — extract_and_substitute","text":"pattern pattern matched values x. pattern may contain pairs parentheses surrounding parts pattern can referred replacement string \\1, \\2, etc., see example. replacement string form prop1:value1+prop2:value2+... defining property names values. value1, value2, etc. may referred parts matching string correspond parts pattern enclosed parentheses, see example. x vector character look substrings extract","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/extract_and_substitute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Substring Matching Pattern and Replace — extract_and_substitute","text":"","code":"kwb.fakin:::extract_and_substitute(   pattern = \"key_(ab(c|d))\",   replacement = \"alphabet:true+full:\\\\1+char2:\\\\2\",   x = c(\"noch viel mehr key_abc\", \"key_abd\", \"abe\") ) #> [1] \"alphabet:true+full:abc+char2:c\" \"alphabet:true+full:abd+char2:d\" #> [3] \"\""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/extract_properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Pattern-Defined Properties from Strings — extract_properties","title":"Extract Pattern-Defined Properties from Strings — extract_properties","text":"Extract Pattern-Defined Properties Strings","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/extract_properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Pattern-Defined Properties from Strings — extract_properties","text":"","code":"extract_properties(x, patterns, replacements, as_data_frame = FALSE)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/extract_properties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Pattern-Defined Properties from Strings — extract_properties","text":"x vector character patterns vector character replacements vector character as_data_frame logical. TRUE (default FALSE), data frame returned.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/extract_properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Pattern-Defined Properties from Strings — extract_properties","text":"","code":"# Define patterns to be matched against patterns <- c(   \"[Bb]ericht\",   \"[- ](\\\\d+)$\",   \"Abschluss\",   \"Zwischen\",   \"_HS$\" )  # Define property:value pairs (or even prop1:value1+prob2:value2+...) # referring to parts of the pattern enclosed in parentheses with \\1, \\2, ... replacements <- c(   \"type:report\",   \"number:\\\\1\",   \"stage:final\",   \"stage:intermediate\",   \"author:Sonnenberg+reviewed:true\" )  # Define strings in which to look for properties and their values x <- c(\"Bericht\", \"Bericht 1\", \"Abschlussbericht\", \"Zwischenbericht_HS\")  # Extract property values as strings extract_properties(x = x, patterns, replacements) #>                                                          Bericht  #>                                                    \"type:report\"  #>                                                        Bericht 1  #>                                           \"type:report+number:1\"  #>                                                 Abschlussbericht  #>                                        \"type:report+stage:final\"  #>                                               Zwischenbericht_HS  #> \"type:report+stage:intermediate+author:Sonnenberg+reviewed:true\"   # Arrange the properties in a data frame extract_properties(x = x, patterns, replacements, as_data_frame = TRUE) #>                 name     author number reviewed        stage   type #> 1            Bericht       <NA>   <NA>     <NA>         <NA> report #> 2          Bericht 1       <NA>      1     <NA>         <NA> report #> 3   Abschlussbericht       <NA>   <NA>     <NA>        final report #> 4 Zwischenbericht_HS Sonnenberg   <NA>     true intermediate report"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/getProjectPaths.html","id":null,"dir":"Reference","previous_headings":"","what":"Paths where to find project on the KWB server — getProjectPaths","title":"Paths where to find project on the KWB server — getProjectPaths","text":"Paths find project KWB server","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/getProjectPaths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paths where to find project on the KWB server — getProjectPaths","text":"","code":"getProjectPaths(start_directory, as_list = FALSE, skip_pattern = \"/_\")"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/getProjectPaths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paths where to find project on the KWB server — getProjectPaths","text":"start_directory Path project network drive KWB as_list TRUE (default FALSE) paths returned list folder names list element names. skip_pattern pattern matching paths removed returned path list. default paths containing underscore beginning subdirectory name removed.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/getProjectPaths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paths where to find project on the KWB server — getProjectPaths","text":"full paths project folders vector character named   list as_list = TRUE.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_depth_summaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Get File Number and Size Summary per Folder Depth — get_depth_summaries","title":"Get File Number and Size Summary per Folder Depth — get_depth_summaries","text":"Get File Number Size Summary per Folder Depth","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_depth_summaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get File Number and Size Summary per Folder Depth — get_depth_summaries","text":"","code":"get_depth_summaries(file_data, project_dir, max_depth = NULL)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_depth_summaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get File Number and Size Summary per Folder Depth — get_depth_summaries","text":"file_data data frame returned read_file_info project_dir path filter paths file_data, passed fakin.path.app:::prepare_for_treemap max_depth maximum depth calculate summary. NULL (default), summaries created available path depths","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_depth_summaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get File Number and Size Summary per Folder Depth — get_depth_summaries","text":"list data frames","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_example_read_and_write_matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Example Matrices of Read- and Write-Permissions — get_example_read_and_write_matrices","title":"Get Example Matrices of Read- and Write-Permissions — get_example_read_and_write_matrices","text":"Get Example Matrices Read- Write-Permissions","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_example_read_and_write_matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Example Matrices of Read- and Write-Permissions — get_example_read_and_write_matrices","text":"","code":"get_example_read_and_write_matrices()"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_file_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of paths containing files of the same name — get_file_duplicates","title":"Get list of paths containing files of the same name — get_file_duplicates","text":"Get list paths containing files name","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_file_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of paths containing files of the same name — get_file_duplicates","text":"","code":"get_file_duplicates(paths, pattern, ...)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_file_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of paths containing files of the same name — get_file_duplicates","text":"paths vector character representing full file paths pattern paths matched pattern matching paths split analysed duplicated files ... arguments passed grep, e.g. ignore.case","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_file_duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get list of paths containing files of the same name — get_file_duplicates","text":"","code":"paths <- c(\"/a/b/c.exe\", \"/a/b/d.exe\", \"/A/B/c.exe\", \"/A/B/d.exe\") get_file_duplicates(paths, pattern = \"\\\\.exe$\") #> Splitting paths ... ok. (0.00s)  #> $c.exe #> [1] \"/a/b/c.exe\" \"/A/B/c.exe\" #>  #> $d.exe #> [1] \"/a/b/d.exe\" \"/A/B/d.exe\" #>"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_function_call_frequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Which Function is Called How Often? — get_function_call_frequency","title":"Which Function is Called How Often? — get_function_call_frequency","text":"Function Called Often?","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_function_call_frequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Which Function is Called How Often? — get_function_call_frequency","text":"","code":"get_function_call_frequency(tree, simple = FALSE, dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_function_call_frequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Which Function is Called How Often? — get_function_call_frequency","text":"tree parse tree returned parse_scripts simple TRUE, simple approach using simple regular expression used. approach fast correct e.g. counts function calls commented even string expressions just look like function calls. Leaving argument default, FALSE, return real function calls evaluating full structure parse tree. dbg TRUE, debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_function_call_frequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Which Function is Called How Often? — get_function_call_frequency","text":"data frame columns name (name function), count  (number times function called)","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_package_function_usage.html","id":null,"dir":"Reference","previous_headings":"","what":"How Often Are the Functions of a Package Used? — get_package_function_usage","title":"How Often Are the Functions of a Package Used? — get_package_function_usage","text":"Often Functions Package Used?","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_package_function_usage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"How Often Are the Functions of a Package Used? — get_package_function_usage","text":"","code":"get_package_function_usage(tree, package, simple = FALSE, by_script = FALSE)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_package_function_usage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"How Often Are the Functions of a Package Used? — get_package_function_usage","text":"tree parse tree returned parse_scripts package name package (must installed) simple TRUE, simple approach using simple regular expression used. approach fast correct e.g. counts function calls commented even string expressions just look like function calls. Leaving argument default, FALSE, return real function calls evaluating full structure parse tree. by_script TRUE functions counted returned script, otherwise counted scripts","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_package_function_usage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"How Often Are the Functions of a Package Used? — get_package_function_usage","text":"data frame columns name (name function), prefixed (number function calls prefixed <package>::   <package>:::), non_prefixed (number function calls    prefixed package name) total (total    number function calls)","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_package_function_usage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"How Often Are the Functions of a Package Used? — get_package_function_usage","text":"","code":"# Read all scripts that are provided in the kwb.fakin package tree <- kwb.code::parse_scripts(root = system.file(package = \"kwb.fakin\")) #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/example_sizeable_sankey.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/create_treemaps.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/extract_properties.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/paths_to_treenodes.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/paths_to_treenodes_2.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/plot_folder_depths.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/read_different_path_files.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/test_networkD3.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/test_package.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/test_plot_files_in_depth.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/test_reporting.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/test_splitting_paths.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/test_treemap.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/use_pathlist_class.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/write_example_file_info.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/scripts/write_file_property_availability.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/testcalls_1.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/testcalls_2.R ... ok. (0.00s)  #> Reading /Users/runner/work/_temp/Library/kwb.fakin/extdata/testcalls_3.R ... ok. (0.00s)   # Check which functions from kwb.utils are used and how often get_package_function_usage(tree, package = \"kwb.utils\") #>      package                  name count explicit implicit #> 1  kwb.utils        selectElements     8        8        0 #> 2  kwb.utils             catAndRun     7        7        0 #> 3  kwb.utils                 catIf     7        7        0 #> 4  kwb.utils              safePath     7        1        6 #> 5  kwb.utils               desktop     6        2        4 #> 6  kwb.utils         selectColumns     6        6        0 #> 7  kwb.utils          getAttribute     5        5        0 #> 8  kwb.utils              catLines     3        1        2 #> 9  kwb.utils     noFactorDataFrame     3        3        0 #> 10 kwb.utils          asColumnList     2        2        0 #> 11 kwb.utils   asNoFactorDataFrame     2        2        0 #> 12 kwb.utils              headtail     2        2        0 #> 13 kwb.utils            loadObject     2        2        0 #> 14 kwb.utils  assignPackageObjects     1        1        0 #> 15 kwb.utils             collapsed     1        1        0 #> 16 kwb.utils         defaultIfNULL     1        1        0 #> 17 kwb.utils           excludeNULL     1        1        0 #> 18 kwb.utils      extractSubstring     1        1        0 #> 19 kwb.utils         fileExtension     1        1        0 #> 20 kwb.utils hsOpenWindowsExplorer     1        1        0 #> 21 kwb.utils           isNaOrEmpty     1        1        0 #> 22 kwb.utils            makeUnique     1        1        0 #> 23 kwb.utils            percentage     1        1        0 #> 24 kwb.utils              rbindAll     1        1        0 #> 25 kwb.utils       removeExtension     1        1        0 #> 26 kwb.utils         resetRowNames     1        1        0 #> 27 kwb.utils       stopIfNotMatrix     1        1        0 #> 28 kwb.utils       toKeysAndValues     1        1        0 #> 29 kwb.utils                  user     1        1        0  # Hm, this does not seem to be the whole truth..."},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_path_stat_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"How Many Folders of the Template are in the Project Folder? — get_path_stat_matrix","title":"How Many Folders of the Template are in the Project Folder? — get_path_stat_matrix","text":"Many Folders Template Project Folder?","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_path_stat_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"How Many Folders of the Template are in the Project Folder? — get_path_stat_matrix","text":"","code":"get_path_stat_matrix(project_folder, template_folders)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_path_stat_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"How Many Folders of the Template are in the Project Folder? — get_path_stat_matrix","text":"project_folder folder look projects one KWB department, e.g. \".../SUW_Department/Projects\" template_folders vector relative paths folders expected contained within folder within project_folder","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_special_character_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Special Characters and Their Byte Codes — get_special_character_info","title":"Get Special Characters and Their Byte Codes — get_special_character_info","text":"Get Special Characters Byte Codes","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_special_character_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Special Characters and Their Byte Codes — get_special_character_info","text":"","code":"get_special_character_info(text, context_length = 7, bytes_per_char = 2)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_special_character_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Special Characters and Their Byte Codes — get_special_character_info","text":"text vector character length one context_length number characters left right special character put column context bytes_per_char number bytes per character","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_special_character_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Special Characters and Their Byte Codes — get_special_character_info","text":"data frame columns special (special characters) bytes (hexadecimanl byte codes space separated string), context (strings \"around\" special characters)","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/get_special_character_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Special Characters and Their Byte Codes — get_special_character_info","text":"","code":"(text <- kwb.fakin:::example_string_with_specials(\"de\")) #> [1] \"Schöne Grüße\"  get_special_character_info(text) #>   special bytes          context #> 1    \\xc3    c3 Sch [ ö ] ne Grü #> 2    \\xb6    b6  öne Gr [ ü ] ße #> 3    \\xc3    c3   ne Grü [ ß ] e #> 4    \\xbc    bc Sch [ ö ] ne Grü #> 5    \\xc3    c3  öne Gr [ ü ] ße #> 6    \\x9f    9f   ne Grü [ ß ] e"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/list_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Get File Paths Recursively (Windows only!) — list_files","title":"Get File Paths Recursively (Windows only!) — list_files","text":"Get full list files root directory using dir function write given file","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/list_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get File Paths Recursively (Windows only!) — list_files","text":"","code":"list_files(root, file, use_batch = TRUE)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/list_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get File Paths Recursively (Windows only!) — list_files","text":"root path directory start \"downwards\" recursively files folders. file path result file (text) paths written. use_batch TRUE (default), batch file written (default list_files.bat tempdir()) run perform dir command","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/merge_read_and_write_matrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Read and Write Permission Matrices — merge_read_and_write_matrices","title":"Merge Read and Write Permission Matrices — merge_read_and_write_matrices","text":"Merge Read Write Permission Matrices","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/merge_read_and_write_matrices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Read and Write Permission Matrices — merge_read_and_write_matrices","text":"","code":"merge_read_and_write_matrices(matrix_read, matrix_write)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/merge_read_and_write_matrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Read and Write Permission Matrices — merge_read_and_write_matrices","text":"matrix_read matrix 0 1 positions read-permissions matrix_write matrix 0 2 positions write-permissions","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/merge_read_and_write_matrices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Read and Write Permission Matrices — merge_read_and_write_matrices","text":"matrix character \"\" positions without permissions, \"-\"   positions read-permissions, \"|\" positions write-permissions   \"+\" positions read- write-permissions","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/merge_read_and_write_matrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Read and Write Permission Matrices — merge_read_and_write_matrices","text":"","code":"# Get example matrices matrices <- get_example_read_and_write_matrices()  # Overlay example matrices merge_read_and_write_matrices(matrices$read, matrices$write) #>        user_1 user_2 user_3 user_4 user_5 user_5 user_6 user_6 user_7 user_8 #> path_1 \"\"     \"\"     \"\"     \"\"     \"-\"    \"\"     \"\"     \"\"     \"\"     \"-\"    #> path_2 \"\"     \"\"     \"\"     \"\"     \"\"     \"\"     \"\"     \"\"     \"\"     \"-\"    #> path_3 \"\"     \"\"     \"\"     \"\"     \"-\"    \"\"     \"\"     \"\"     \"-\"    \"-\"    #> path_4 \"\"     \"|\"    \"\"     \"|\"    \"\"     \"\"     \"-\"    \"\"     \"\"     \"-\"    #> path_4 \"\"     \"\"     \"\"     \"\"     \"\"     \"\"     \"\"     \"\"     \"\"     \"\"     #> path_5 \"|\"    \"\"     \"\"     \"|\"    \"-\"    \"\"     \"-\"    \"\"     \"\"     \"\"     #> path_5 \"\"     \"\"     \"\"     \"\"     \"\"     \"\"     \"\"     \"\"     \"\"     \"\"     #> path_6 \"|\"    \"\"     \"\"     \"|\"    \"|\"    \"\"     \"|\"    \"\"     \"\"     \"\"     #> path_7 \"\"     \"|\"    \"\"     \"|\"    \"|\"    \"\"     \"|\"    \"\"     \"\"     \"\""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details. See magrittr::%>% details.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs  lhs %>% rhs"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/plot_biggest_folders.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Folders with Maximum Number of Files — plot_biggest_folders","title":"Plot Folders with Maximum Number of Files — plot_biggest_folders","text":"Plot Folders Maximum Number Files","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/plot_biggest_folders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Folders with Maximum Number of Files — plot_biggest_folders","text":"","code":"plot_biggest_folders(tree, max_depth = 5, to_pdf = TRUE)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/plot_biggest_folders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Folders with Maximum Number of Files — plot_biggest_folders","text":"tree tree list structure returned to_tree max_depth maximum number folder depth to_pdf TRUE output directed temporary pdf file","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/plot_file_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Distributions of Files in Folder Depths and Name Summaries — plot_file_distribution","title":"Plot Distributions of Files in Folder Depths and Name Summaries — plot_file_distribution","text":"Plot Distributions Files Folder Depths Name Summaries","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/plot_file_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Distributions of Files in Folder Depths and Name Summaries — plot_file_distribution","text":"","code":"plot_file_distribution(file_data, start_path, n_root_parts, ..., to_pdf = TRUE)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/plot_file_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Distributions of Files in Folder Depths and Name Summaries — plot_file_distribution","text":"file_data data frame columns path, type, size start_path paths file_data considered start path n_root_parts number first path segments considered \"root\" ... arguments passed kwb.fakin:::plot_file_size_in_depth to_pdf TRUE (default) results plotted temporary pdf file opened pdf viewer","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/plot_file_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Distributions of Files in Folder Depths and Name Summaries — plot_file_distribution","text":"","code":"# Set a seed for the random number generator set.seed(20190625)  # Create random paths paths <- kwb.pathdict::random_paths()  # Number of paths n <- length(paths)  # Create artificial file data (invent sizes) file_data <- kwb.utils::noFactorDataFrame(   path = paths,   type = \"file\",   size = abs(rnorm(n)) * kwb.fakin:::bytes_to_mib(     2^sample(30, n, replace = TRUE)   ) )  kwb.fakin::plot_file_distribution(   file_data, start_path = \"reason\", n_root_parts = 1, to_pdf = FALSE ) #> Splitting paths ... ok. (0.00s)  #> Warning: no non-missing arguments to min; returning Inf #> Splitting paths ... ok. (0.00s)  #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to min; returning Inf #> Putting path segments together ... ok. (0.00s)  #> Warning: no non-missing arguments to max; returning -Inf #> list()"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/plot_files_in_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot File Sizes over Folder Depth — plot_files_in_depth","title":"Plot File Sizes over Folder Depth — plot_files_in_depth","text":"Plot File Sizes Folder Depth","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/plot_files_in_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot File Sizes over Folder Depth — plot_files_in_depth","text":"","code":"plot_files_in_depth(depth_summaries, project)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/plot_files_in_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot File Sizes over Folder Depth — plot_files_in_depth","text":"depth_summaries list returned get_depth_summaries project name project (fact folder name folder depth 1)","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/plot_number_of_elements_per_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Folders with Number of Direct Children — plot_number_of_elements_per_folder","title":"Plot Folders with Number of Direct Children — plot_number_of_elements_per_folder","text":"Plot Folders Number Direct Children","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/plot_number_of_elements_per_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Folders with Number of Direct Children — plot_number_of_elements_per_folder","text":"","code":"plot_number_of_elements_per_folder(   x,   main = \"\",   to_pdf = FALSE,   max_chars = 20 )"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/plot_number_of_elements_per_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Folders with Number of Direct Children — plot_number_of_elements_per_folder","text":"x tree list structure returned to_tree main title plot to_pdf TRUE output directed temporary pdf file max_chars maximum number characters used file folder names","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/prepare_path_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Select and Filter for Relevant Path Information — prepare_path_data","title":"Select and Filter for Relevant Path Information — prepare_path_data","text":"function gets data frame containing path information input. filters rows value \"file\" column type keeps columns path size. pattern NULL, data frame filtered rows path matches given pattern. Finally, common root paths column path removed resulting data frame returned.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/prepare_path_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select and Filter for Relevant Path Information — prepare_path_data","text":"","code":"prepare_path_data(path_info, pattern = NULL)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/prepare_path_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select and Filter for Relevant Path Information — prepare_path_data","text":"path_info data frame containing file path information returned read_file_info pattern pattern select subset paths NULL (default) paths path_info considered. setting pattern \"^/path//start/directory\" can \"zoom \" path tree, returning contents \"/path//start/directory\".","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/prepare_path_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select and Filter for Relevant Path Information — prepare_path_data","text":"data frame columns path size. See Description.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/prepare_path_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select and Filter for Relevant Path Information — prepare_path_data","text":"","code":"path_info <- kwb.utils::noFactorDataFrame(   path = c(\"/path/to/root/\", \"/path/to/root/file_1\", \"/path/to/root/file_2\"),   type = c(\"directory\", \"file\", \"file\"),   size = c(0L, 10L, 20L) )  path_info #>                   path      type size #> 1       /path/to/root/ directory    0 #> 2 /path/to/root/file_1      file   10 #> 3 /path/to/root/file_2      file   20  kwb.fakin:::prepare_path_data(path_info) #> Splitting paths ... ok. (0.00s)  #> Removing the first 4 path segments ... ok. (0.00s)  #> Putting path segments together ... ok. (0.00s)  #>     path size #> 2 file_1   10 #> 3 file_2   20"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/print.path_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a tree — print.path_tree","title":"Print a tree — print.path_tree","text":"Print tree","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/print.path_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a tree — print.path_tree","text":"","code":"# S3 method for path_tree print(x, max_depth = 2, ...)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/print.path_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a tree — print.path_tree","text":"x tree object returned kwb.fakin:::to_tree max_depth number depth levels printed ... arguments (currently used)","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/property_strings_to_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"key1:value1+key2:value2 Strings to Data Frame — property_strings_to_data_frame","title":"key1:value1+key2:value2 Strings to Data Frame — property_strings_to_data_frame","text":"function needs improvement! argument called \"values\" values appear column \"name\". Also, happens also property name \"name\"?","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/property_strings_to_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"key1:value1+key2:value2 Strings to Data Frame — property_strings_to_data_frame","text":"","code":"property_strings_to_data_frame(property_strings, values = NULL)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/property_strings_to_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"key1:value1+key2:value2 Strings to Data Frame — property_strings_to_data_frame","text":"property_strings vector character containing property values form prop1:value1+prop2:value2+prob3:value3+... values given NULL must vector character long property_strings. values appear first column name returned data frame.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/property_strings_to_data_frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"key1:value1+key2:value2 Strings to Data Frame — property_strings_to_data_frame","text":"","code":"property_strings <- c(   \"id:peter+class:person\",   \"id:germany+class:country\" )  kwb.fakin:::property_strings_to_data_frame(property_strings) #>     class      id #> 1  person   peter #> 2 country germany kwb.fakin:::property_strings_to_data_frame(property_strings, c(\"a\", \"b\")) #>   name   class      id #> 1    a  person   peter #> 2    b country germany"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/read_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data from CSV File — read_csv","title":"Read Data from CSV File — read_csv","text":"Read Data CSV File","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/read_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data from CSV File — read_csv","text":"","code":"read_csv(file, sep = \";\", version = 2, fileEncoding = NULL, ...)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/read_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data from CSV File — read_csv","text":"file path CSV file sep column separator version determines function use reading CSV file 1: read.table, 2: fread fileEncoding passed read.table encoding fread ... arguments passed read.table fread","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/read_path_information.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Files Containing File Path Information from Folder — read_path_information","title":"Read Files Containing File Path Information from Folder — read_path_information","text":"Read Files Containing File Path Information Folder","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/read_path_information.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Files Containing File Path Information from Folder — read_path_information","text":"","code":"read_path_information(file_info_dir, pattern = \"^path-info\", ...)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/read_path_information.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Files Containing File Path Information from Folder — read_path_information","text":"file_info_dir path folder look files matching pattern pattern pattern match file names read. Default: \"^path-info\" ... arguments passed read_file_paths","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/read_path_information.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Files Containing File Path Information from Folder — read_path_information","text":"","code":"# Set root directory (here: package installation directory of kwb.fakin) root_dir <- system.file(package = \"kwb.fakin\")  # Set output directory output_dir <- tempdir()  # Write all paths below root_dir into a \"path-info\"-file fakin.path.app::get_and_save_file_info(root_dir, output_dir) #> Getting file information on files below /Users/runner/work/_temp/Library/kwb.fakin ... ok. (0.00s)  #> Elapsed: 0.003  #> Writing to '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpAqBTLj/path-info_2022-06-09_0501_kwb.fakin.csv' with data.table::fwrite() ... ok. (0.00s)  #> Elapsed: 0.002  #> [1] \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpAqBTLj/path-info_2022-06-09_0501_kwb.fakin.csv\"  # Read the \"path-info\"-files that are (now) found in output_dir path_info <- kwb.fakin:::read_path_information(output_dir) #> Encodings guessed by readr: #> [1] \"ASCII\" #> Selected encoding: ascii #> Reading file with read_file_info() ... Reading '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpAqBTLj/path-info_2022-06-09_0501_kwb.fakin.csv' with data.table::fread() ... ok. (0.24s)  #> Converting file size to MiB ... ok. (0.00s)  #> ok. (0.25s)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/report_about_github_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Report about the Functions in an R-Package on GitHub — report_about_github_package","title":"Report about the Functions in an R-Package on GitHub — report_about_github_package","text":"Report Functions R-Package GitHub","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/report_about_github_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report about the Functions in an R-Package on GitHub — report_about_github_package","text":"","code":"report_about_github_package(repo, ...)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/report_about_github_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report about the Functions in an R-Package on GitHub — report_about_github_package","text":"repo path GitHub repository ... arguments passed report_about_r_scripts","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/report_about_r_scripts.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a HTML Report About R Scripts — report_about_r_scripts","title":"Create a HTML Report About R Scripts — report_about_r_scripts","text":"Create HTML Report R script root directory. report contain overview plot showing number rows script. addition, one plot generated per script, showing function defined script, number expressions contained function.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/report_about_r_scripts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a HTML Report About R Scripts — report_about_r_scripts","text":"","code":"report_about_r_scripts(   root,   scripts = dir(root, \"\\\\.R$\", ignore.case = TRUE, recursive = TRUE),   show = TRUE )"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/report_about_r_scripts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a HTML Report About R Scripts — report_about_r_scripts","text":"root path directory start looking R scripts scripts optional. Paths R scripts, relative path given root show TRUE created HTML file opened default browser","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/report_about_r_scripts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a HTML Report About R Scripts — report_about_r_scripts","text":"path created HTML file, invisibly","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/summary.path_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Statistics on Path Tree Nodes — summary.path_tree","title":"Get Statistics on Path Tree Nodes — summary.path_tree","text":"Get Statistics Path Tree Nodes","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/summary.path_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Statistics on Path Tree Nodes — summary.path_tree","text":"","code":"# S3 method for path_tree summary(object, ...)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/summary.path_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Statistics on Path Tree Nodes — summary.path_tree","text":"object tree object returned kwb.fakin:::to_tree ... arguments (currently used)","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/toSubdirMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated. — toSubdirMatrix","title":"Deprecated. — toSubdirMatrix","text":"function deprecated. Please use kwb.file::to_subdir_matrix() instead.","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/toSubdirMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated. — toSubdirMatrix","text":"","code":"toSubdirMatrix(paths, fill.value = \"\", result_type = \"matrix\", dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/toSubdirMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated. — toSubdirMatrix","text":"paths vector path strings fill.value value used fill empty cells result matrix result_type one c(\"matrix\", \"data.frame\"), specifying type object returned dbg TRUE debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/toSubdirMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated. — toSubdirMatrix","text":"matrix data frame, depending result_type","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/to_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Paths to Tree List — to_tree","title":"Convert Paths to Tree List — to_tree","text":"Convert Paths Tree List","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/reference/to_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Paths to Tree List — to_tree","text":"","code":"to_tree(x, dbg = FALSE)"},{"path":"https://kwb-r.github.io/kwb.fakin/reference/to_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Paths to Tree List — to_tree","text":"x list returned strsplit dbg TRUE, debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/news/index.html","id":"kwbfakin-041-2022-06-09","dir":"Changelog","previous_headings":"","what":"kwb.fakin 0.4.1 2022-06-09","title":"kwb.fakin 0.4.1 2022-06-09","text":"Harmonise R package kwb.pkgbuild plot_path_network: add remove_common_root argument (#6) Added NEWS.md file track changes package. see https://style.tidyverse.org/news.html writing good NEWS.md","code":""},{"path":"https://kwb-r.github.io/kwb.fakin/news/index.html","id":"kwbfakin-030-2018-07-11","dir":"Changelog","previous_headings":"","what":"kwb.fakin 0.3.0 2018-07-11","title":"kwb.fakin 0.3.0 2018-07-11","text":"First release Cite :","code":""}]
